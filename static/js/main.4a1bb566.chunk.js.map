{"version":3,"sources":["components/PeopleList/PeopleList.tsx","App.tsx","api/api.ts","index.tsx"],"names":["PeopleList","people","className","map","person","name","lastname","age","sex","App","state","sex_m","sex_f","hasLoadingError","error","handleChange","event","target","value","type","checked","setState","fetch","then","response","ok","json","Promise","reject","Error","catch","this","visiblePeople","filter","toLowerCase","includes","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a1bb566.chunk.js","sourcesContent":["import React from 'react';\nimport './PeopleList.scss';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => (\n  <ul className=\"peopleList\">\n    {people.map(person => (\n      <li className=\"peopleList__item\" key={person.lastname}>\n        <div>\n          {person.name}\n          {' '}\n          {person.lastname}\n        </div>\n        <div>\n          Возраст:\n          {' '}\n          {person.age}\n        </div>\n        <div>\n          Пол:\n          {' '}\n          { person.sex === 'm' ? 'мужской' : 'женский' }\n        </div>\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.scss';\n\nimport { getPeople } from './api/api';\nimport { PeopleList } from './components/PeopleList';\n\ninterface State {\n  people: Person[],\n  name: string,\n  lastname: string,\n  age: string,\n  sex_m: boolean,\n  sex_f: boolean,\n  hasLoadingError: boolean,\n  error: string,\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    people: [],\n    name: '',\n    lastname: '',\n    age: '',\n    sex_m: false,\n    sex_f: false,\n    hasLoadingError: false,\n    error: '',\n  };\n\n  componentDidMount() {\n    getPeople()\n      .then(people => {\n        this.setState({ people, hasLoadingError: false, error: '' });\n      })\n      .catch(() => {\n        this.setState({ hasLoadingError: true, error: 'an error occurred while loading data' });\n      });\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, value, type, checked,\n    } = event.target;\n\n    this.setState(\n      {\n        [name]: type === 'checkbox'\n          ? checked\n          : value,\n      } as unknown as Pick<State, keyof State>,\n    );\n  };\n\n  render() {\n    const {\n      people, name, lastname, age, sex_m, sex_f, hasLoadingError, error,\n    } = this.state;\n\n    let visiblePeople: Person[] = people;\n\n    if (name) {\n      visiblePeople = visiblePeople.filter(\n        person => person.name.toLowerCase().includes(name.toLowerCase()),\n      );\n    }\n\n    if (lastname) {\n      visiblePeople = visiblePeople.filter(\n        person => person.lastname.toLowerCase().includes(lastname.toLowerCase()),\n      );\n    }\n\n    if (age) {\n      visiblePeople = visiblePeople.filter(\n        person => person.age === +age,\n      );\n    }\n\n    if (sex_m) {\n      visiblePeople = visiblePeople.filter(\n        person => person.sex === 'm',\n      );\n    }\n\n    if (sex_f) {\n      visiblePeople = visiblePeople.filter(\n        person => person.sex === 'f',\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"filter\">\n          <label htmlFor=\"lastname\">\n            Имя\n            {' '}\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              className=\"filter__item\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"lastname\">\n            Фамилия\n            {' '}\n            <input\n              type=\"text\"\n              name=\"lastname\"\n              id=\"lastname\"\n              className=\"filter__item\"\n              value={lastname}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"age\">\n            Возраст\n            {' '}\n            <input\n              type=\"text\"\n              name=\"age\"\n              id=\"age\"\n              className=\"filter__item\"\n              value={age}\n              onChange={this.handleChange}\n            />\n          </label>\n          <div className=\"filter__item\">\n            <label htmlFor=\"sex_m\">\n              Пол:\n              {' '}\n              <input\n                type=\"checkbox\"\n                id=\"sex_m\"\n                name=\"sex_m\"\n                checked={sex_m}\n                onChange={this.handleChange}\n              />\n              м\n            </label>\n            <label htmlFor=\"sex_f\">\n              <input\n                type=\"checkbox\"\n                id=\"sex_f\"\n                name=\"sex_f\"\n                checked={sex_f}\n                onChange={this.handleChange}\n              />\n              ж\n            </label>\n          </div>\n        </div>\n\n        { hasLoadingError\n          ? (\n            <div className=\"error\">{error}</div>\n          )\n\n          : (\n            <PeopleList people={visiblePeople} />\n          )}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const BASE_URL = 'https://venbest-test.herokuapp.com/';\n\nexport const getPeople = (): Promise<Person[]> => {\n  return fetch(`${BASE_URL}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error());\n      }\n\n      return response.json();\n    });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}